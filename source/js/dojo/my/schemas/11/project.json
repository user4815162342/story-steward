{
   "$schema":"http://json-schema.org/draft-03/schema#",
   "title":"Story Steward Project File Format 1.1",
   "description":"Specification for the 1.1 version of the format of the primary Story Steward Project JSON File",
   "__changeLog":{
      "1.1":[
         "Tags will only accept an array of strings now, lone strings are not valid.",
         "Tags are now includes as part of the entity, so all entities have tags, even if they aren't currently used.",
         "Timestamp will only accept a string, objects with _type and _value properties are no longer valid.",
         "Credit object now extends entity, since it already copies other fields, this makes the schema easier to understand.",
         "Note.subnote will now only accept an array of notes, lone note entities are not valid.",
         "History is no longer kept with each goal. A new global history structure has been added to avoid duplication of data, and to allow people to track their history without specifying a goal. This structure also supports grouping by book, part and scene status.",
         "Goal.targetStatus has been changed to whatStatus.",
         "Goal.what has been changed to Goal.where, and has been more clearly defined.",
         "New Goal.what added to specify whether words, scenes or chapters should be counted.",
         "Goal.startingWordCount and targetWordCount changed to startingCount and targetCount.",
         "Reorganized the types of entities into three groups on the project (Content, Notes, Work), instead of seven (Content, Notes, People, Places, Things, Journal, Goals)",
         "Added task entity for tracking tasks",
         "Removed subtype from content entities, replaced with differentiated values for type"
      ],
      "1.0":[
         "Initial specification, based on actual use in Story Steward."
      ]
   },
   "types":[
      {
         "id":"project-data-memo",
         "title":"Memo",
         "description":"A short bit of text content",
         "type":"string"
      },
      {
         "id":"project-data-uid",
         "title":"UID",
         "description":"An identifying string intended to be unique within the project, usually generated by the application",
         "type":"string"
      },
      {
         "id":"project-data-uid-ref",
         "title":"UID Reference",
         "description":"A string intended to reference another object by it's UID property.",
         "type":"string"
      },
      {
         "id":"project-data-file-ref",
         "title":"File Reference",
         "description":"A string intended to reference the name of a file in which long readable text content is stored. The directory this file is located in is determined by the application.",
         "type":"string"
      },
      {
         "id":"project-data-tags",
         "title":"List of tags",
         "description":"An array of strings used for marking entities with additional data.",
         "type":"array",
         "items":{
            "type":"string"
         },
         "uniqueItems":true
      },
      {
         "id":"project-data-timestamp",
         "title":"Timestamp",
         "description":"A string representing a date and time in a subset of ISO 8601 format. Accuracy is at most down to the second. All times are UTC.",
         "type":"string",
         "format":"date-time",
         "pattern":"^(?:[+-]\\d*)?\\d{4}-(?:0\\d|1[0-2])-(?:[0-2]\\d|3[01])T(?:(?:[01]\\d|2[0-3])\\:(?:[0-5]\\d)\\:(?:[0-5]\\d)|24\\:00\\:00)Z$"
      },
      {
         "id":"project-data-date",
         "title":"Date",
         "description":"A string representing a date in a subset of ISO 8601 format.",
         "type":"string",
         "format":"date",
         "pattern":"^(?:[+-]\\d*)?\\d{4}-(?:0\\d|1[0-2])-(?:[0-2]\\d|3[01])$"
      },
      {
         "id":"project-data-history-entry",
         "title":"History Log Entry",
         "description":"Represents a count history for a given day. Counts are grouped by Book, Part and status, totals can be calculated by these groups.",
         "type":"object",
         "properties":{
            "uid":{
               "$ref":"project-data-uid"
            },
            "when":{
               "$ref":"project-data-date"
            },
			"legacy": {
			   "description": "This field means that the history item was converted from a previous version of the format. The value of this property indicates it's original format.",
			   "type": "string",
			   "pattern": "^1.0$"
			},
            "booksAndParts":{
               "description":"Counts statistics grouped by the Book or Part they occurred in. Counts per Book refer only to counts from Chapters or Scenes not also inside a Part in the Book.",
               "type":"object",
               "patternProperties":{
                  "^(?!uid).*|uid.+$":{
                     "id":"project-data-history-entry-book-group",
                     "description":"Property is the uid for a book or part for which summary data is found. For future compatibility, the name 'uid' is not allowed.",
                     "type":"object",
                     "properties":{
                        "parent":{
                           "description":"The containing parent of the book or part. This allows tracking this history when content has moved to different books. If this is missing, then the subject is at the root.",
                           "type":{
                              "$ref":"project-data-uid-ref"
                           }
                        },
                        "chapters":{
                           "title":"Chapter Count",
                           "description":"The number of chapters counted in the current Book or Part. This can not be grouped by status since a single chapter can have multiple statuses.",
                           "type":"integer",
                           "minimum":0
                        },
                        "statuses":{
                           "description":"Counts grouped by the status of the scene.",
                           "type":"object",
                           "patternProperties":{
                              "^(?!uid).*|uid.+$":{
                                 "id":"project-data-history-entry-status-group",
                                 "description":"Property is a valid scene status for which summary data is found. For future compatibility, the name 'uid' is not allowed.",
                                 "properties":{
                                    "scenes":{
                                       "title":"Scene Count",
                                       "description":"The number of scenes with the current status, in the current Book or Part.",
                                       "type":"integer",
                                       "minimum":0
                                    },
                                    "words":{
                                       "title":"Word Count",
                                       "description":"The number of words in all scenes with the current status, in the current Book or Part.",
                                       "type":"integer",
                                       "minimum":0
                                    }
                                 }
                              }
                           }
                        },
                        "noStatus":{
                           "$ref":"project-data-history-entry-status-group"
                        }
                     }
                  }
               }
            },
            "noBookOrPart":{
               "$ref":"project-data-history-entry-book-group"
            }
         }
      },
      {
         "id":"project-data-entity",
         "title":"Entity",
         "description":"A base schema from which entities derive.",
         "type":"object",
         "properties":{
            "type":{
               "description":"A pre-defined identifier specifying the type of entity this represents. Generally, schemas which extend this schema will specify a pattern which the type must match.",
               "type":"string",
               "required":true
            },
            "uid":{
               "$ref":"project-data-uid",
               "required":true
            },
            "created":{
               "description":"The date and time at which the entity was created.",
               "type":{
                  "$ref":"project-data-timestamp"
               },
               "required":true
            },
            "modified":{
               "description":"The date and time at which the entity was last modified.",
               "type":{
                  "$ref":"project-data-timestamp"
               },
               "required":true
            },
            "name":{
               "description":"A human-language name for the entity, for display in the application user interface",
               "type":"string"
            },
            "tags":{
               "$ref":"project-data-tags"
            }
         }
      },
      {
         "id":"project-data-credit",
         "title":"Credit structure",
         "description":"An object representing data referring to an original contributor to the manuscripts defined by the project",
         "type":"object",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^credit$"
            },
            "biography":{
               "$ref":"project-data-memo"
            },
            "role":{
               "type":"string"
            }
         }
      },
      {
         "id":"project-data-content",
         "title":"Content entity",
         "description":"A base schema from which content entities derive",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "description":{
               "$ref":"project-data-memo"
            },
            "credits":{
               "type":"array",
               "items":{
                  "$ref":"project-data-credit"
               }
            },
            "doNotPublish":{
               "type":"boolean"
            }
         }
      },
      {
         "id":"project-data-scene",
         "title":"Scene entity",
         "extends":{
            "$ref":"project-data-content"
         },
         "properties":{
            "type":{
               "pattern":"^scene$"
            },
            "begins":{
               "type":"string",
               "description":"Specifies the date and time on which the scene begins. No restriction to date format for use with fictional calendars."
            },
            "ends":{
               "type":"string",
               "description":"Specifies the date and time on which the scene ends. No restriction to date format for use with fictional calendars."
            },
            "viewpoint":{
               "$ref":"project-data-uid-ref"
            },
            "setting":{
               "$ref":"project-data-uid-ref"
            },
            "people":{
               "type":"array",
               "items":{
                  "$ref":"project-data-uid-ref"
               }
            },
            "places":{
               "type":"array",
               "items":{
                  "$ref":"project-data-uid-ref"
               }
            },
            "things":{
               "type":"array",
               "items":{
                  "$ref":"project-data-uid-ref"
               }
            },
            "notes":{
               "$ref":"project-data-file-ref"
            },
            "lastWordCount":{
               "type":"integer"
            },
            "status":{
               "description":"Although new statuses should be picked from the current list of statuses, this value may be a status that has been deleted from the list of statuses.",
               "type":"string"
            },
            "structure":{
               "type":"string"
            },
            "importance":{
               "type":"string"
            },
            "ratings":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "maximum":10,
                  "minimum":0
               }
            },
            "goal":{
               "$ref":"project-data-memo"
            },
            "conflict":{
               "$ref":"project-data-memo"
            },
            "disaster":{
               "$ref":"project-data-memo"
            },
            "reaction":{
               "$ref":"project-data-memo"
            },
            "dilemma":{
               "$ref":"project-data-memo"
            },
            "decision":{
               "$ref":"project-data-memo"
            },
            "text":{
               "$ref":"project-data-file-ref"
            }
         }
      },
      {
         "id":"project-data-chapter",
         "title":"Chapter entity",
         "extends":{
            "$ref":"project-data-content"
         },
         "properties":{
            "type":{
               "pattern":"^chapter$"
            },
            "content":{
               "type":"array",
               "items":{
                  "type":[
                     {
                        "$ref":"project-data-scene"
                     }
                  ]
               }
            }
         }
      },
      {
         "id":"project-data-part",
         "title":"Part entity",
         "extends":{
            "$ref":"project-data-content"
         },
         "properties":{
            "type":{
               "pattern":"^part$"
            },
            "content":{
               "type":"array",
               "items":{
                  "type":[
                     {
                        "$ref":"project-data-chapter"
                     },
                     {
                        "$ref":"project-data-scene"
                     }
                  ]
               }
            }
         }
      },
      {
         "id":"project-data-book",
         "title":"Book entity",
         "extends":{
            "$ref":"project-data-content"
         },
         "properties":{
            "type":{
               "pattern":"^book$"
            },
            "content":{
               "type":"array",
               "items":{
                  "type":[
                     {
                        "$ref":"project-data-part"
                     },
                     {
                        "$ref":"project-data-chapter"
                     },
                     {
                        "$ref":"project-data-scene"
                     }
                  ]
               }
            }
         }
      },
      {
         "id":"project-data-journal-entry",
         "title":"Journal entry entity",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^journal$"
            },
            "posted":{
               "type":{
                  "$ref":"project-data-timestamp"
               }
            },
            "text":{
               "$ref":"project-data-file-ref"
            }
         }
      },
      {
         "id":"project-data-note",
         "title":"Note entity",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^note$"
            },
            "text":{
               "$ref":"project-data-file-ref"
            },
            "subnotes":{
               "type":"array",
               "items":{
                  "$ref":"project-data-note"
               }
            }
         }
      },
      {
         "id":"project-data-person",
         "title":"Person entity",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^person$"
            },
            "fullName":{
               "type":"string"
            },
            "aliases":{
               "type":"string"
            },
            "isMajor":{
               "type":"boolean"
            },
            "description":{
               "$ref":"project-data-memo"
            },
            "biography":{
               "$ref":"project-data-file-ref"
            },
            "notes":{
               "$ref":"project-data-file-ref"
            },
            "role":{
               "type":"string"
            },
            "importance":{
               "type":"string"
            },
            "ratings":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "maximum":10,
                  "minimum":0
               }
            },
            "motivation":{
               "$ref":"project-data-memo"
            },
            "goal":{
               "$ref":"project-data-memo"
            },
            "conflict":{
               "$ref":"project-data-memo"
            },
            "epiphany":{
               "$ref":"project-data-memo"
            }
         }
      },
      {
         "id":"project-data-place",
         "title":"Place entity",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^place$"
            },
            "description":{
               "$ref":"project-data-memo"
            },
            "background":{
               "$ref":"project-data-file-ref"
            },
            "notes":{
               "$ref":"project-data-file-ref"
            }
         }
      },
      {
         "id":"project-data-thing",
         "title":"Thing entity",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^thing$"
            },
            "description":{
               "$ref":"project-data-memo"
            },
            "background":{
               "$ref":"project-data-file-ref"
            },
            "notes":{
               "$ref":"project-data-file-ref"
            }
         }
      },
      {
         "id":"project-data-goal",
         "title":"Goal entity",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^goal$"
            },
            "whatStatus":{
               "description":"Allows specifying a specific scene which the scenes must have in order to be counted.  This may be a status that has been deleted from the list of statuses.",
               "type":"string"
            },
            "where":{
               "description":"Allows specification of a specific book, part, chapter or scene in which the wordcount must exist.",
               "type":{
                  "$ref":"project-data-uid-ref"
               }
            },
            "what":{
               "description":"Allows specifying what should be counted.",
               "type":"string",
               "enum":[
                  "words",
                  "scenes",
                  "chapters"
               ],
               "default":"words"
            },
            "comments":{
               "type":{
                  "$ref":"project-data-memo"
               }
            },
            "starting":{
               "type":{
                  "$ref":"project-data-date"
               }
            },
            "ending":{
               "type":{
                  "$ref":"project-data-date"
               }
            },
            "startingCount":{
			   "description":"This is only used for legacy data, from previous project formats. With the new format, the starting value can be taken from the last history entry prior to the goal, or 0 is assumed",
               "type":"integer"
            },
            "targetCount":{
			   "description":"While it may seem odd to have a goal without a targetcount, this is not required. Goals can be used to visually inspect progress without deadlines as well.",  
               "type":"integer"
            }
         }
      },
      {
         "id":"project-data-task",
         "title":"Task entity",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^task$"
            },
            "progress":{
               "description":"Allows tracking progress on the task. Set to 100 when task is completed.",
               "type":"integer",
               "minimum":0,
               "maximum":100
            },
            "description":{
               "type":{
                  "$ref":"project-data-memo"
               }
            },
            "starting":{
               "type":{
                  "$ref":"project-data-date"
               }
            },
            "due":{
               "type":{
                  "$ref":"project-data-date"
               }
            },
            "completed":{
               "type":{
                  "$ref":"project-data-date"
               }
            }
         }
      }
   ],
   "type":"object",
   "extends":{
      "$ref":"project-data-entity"
   },
   "properties":{
      "type":{
         "pattern":"^project$"
      },
      "uid":{
         "description":"This uid is pre-specified, as there should only ever be one project entity per project, and knowing this id ahead of time makes it possible to find it in the database quickly.",
         "pattern":"^project$"
      },
      "format":{
         "type":"string",
         "pattern":"^story-steward-1\\.1$",
         "required":true
      },
      "description":{
         "$ref":"project-data-memo"
      },
      "credits":{
         "type":"array",
         "items":{
            "$ref":"project-data-credit"
         }
      },
      "content":{
         "description":"Entities which indicate the actual publishable content, sorted in the order in which they will appear.",
         "type":"array",
         "items":{
            "type":[
               {
                  "$ref":"project-data-book"
               },
               {
                  "$ref":"project-data-part"
               },
               {
                  "$ref":"project-data-chapter"
               },
               {
                  "$ref":"project-data-scene"
               }
            ]
         }
      },
      "notes":{
         "description":"Entities which indicate research notes and background information, in no particular order.",
         "type":"array",
         "items":{
            "type":[
               {
                  "$ref":"project-data-note"
               },
               {
                  "$ref":"project-data-person"
               },
               {
                  "$ref":"project-data-place"
               },
               {
                  "$ref":"project-data-thing"
               }
            ]
         }
      },
      "work":{
         "description":"Entities which are used for planning and tracking progress, in no particular order.",
         "type":"array",
         "items":{
            "type":[
               {
                  "$ref":"project-data-journal-entry"
               },
               {
                  "$ref":"project-data-goal"
               },
               {
                  "$ref":"project-data-task"
               }
            ]
         }
      },
      "history":{
         "title":"History",
         "description":"Tracks historical summary data for user's reference.",
         "type":"array",
         "items":{
            "$ref":"project-data-history-entry"
         }
      },
      "customizations":{
         "type":"object",
         "properties":{
            "scene":{
               "type":"object",
               "properties":{
                  "statuses":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  },
                  "structures":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  },
                  "importances":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  },
                  "ratings":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               }
            },
            "person":{
               "type":"object",
               "properties":{
                  "roles":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  },
                  "importances":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  },
                  "ratings":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               }
            },
            "tags":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            }
         }
      },
      "interface":{
         "type":"object"
      }
   }
}