{
   "$schema":"http://json-schema.org/draft-03/schema#",
   "types":[
      {
         "id":"project-data-memo",
         "title":"Memo",
         "description":"A short bit of text content",
         "type":"string"
      },
      {
         "id":"project-data-uid",
         "title":"UID",
         "description":"An identifying string intended to be unique within the project, usually generated by the application",
         "type":"string"
      },
      {
         "id":"project-data-uid-ref",
         "title":"UID Reference",
         "description":"A string intended to reference another object by it's UID property.",
         "type":"string"
      },
      {
         "id":"project-data-file-ref",
         "title":"File Reference",
         "description":"A string intended to reference the name of a file in which long readable text content is stored. The directory this file is located in is determined by the application.",
         "type":"string"
      },
      {
         "id":"project-data-tags",
         "title":"List of tags",
         "description":"An array of strings used for marking entities with additional data.",
         "__comment":"Have to do this union due to some issues with earlier versions which saved sole tags as strings.",
         "type":[
            {
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            {
               "type":"string"
            }
         ],
         "uniqueItems":true
      },
      {
         "id":"project-data-timestamp",
         "title":"Timestamp",
         "description":"A string representing a date and time in ISO 8601 format",
         "__comment":"Another one that has to be done in a union due to issues with earlier versions which didn't clean up timestamps from their internal representation.",
         "type":[
            {
               "type":"string",
               "format":"date-time"
            },
            {
               "type":"object",
               "properties":{
                  "_type":{
                     "type":"string",
                     "pattern":"^Date$"
                  },
                  "_value":{
                     "type":"string",
                     "format":"date-time"
                  }
               }
            }
         ]
      },
      {
         "id":"project-data-entity",
         "title":"Entity",
         "description":"A base schema from which entities derive.",
         "type":"object",
         "properties":{
            "type":{
               "description":"A pre-defined identifier specifying the type of entity this represents. Generally, schemas which extend this schema will specify a pattern which the type must match.",
               "type":"string",
               "required":true
            },
            "uid":{
               "$ref":"project-data-uid",
               "required":true
            },
            "created":{
               "description":"The date and time at which the entity was created.",
               "type":{
                  "$ref":"project-data-timestamp"
               },
               "required":true
            },
            "modified":{
               "description":"The date and time at which the entity was last modified.",
               "type":{
                  "$ref":"project-data-timestamp"
               },
               "required":true
            },
            "name":{
               "description":"A human-language name for the entity, for display in the application user interface",
               "type":"string",
               "required":false
            }
         }
      },
      {
         "id":"project-data-credit",
         "title":"Credit structure",
         "description":"An object representing data referring to an original contributor to the manuscripts defined by the project",
         "type":"object",
         "__comment":[
            "This vaguely resembles an entity, but it isn't really an entity, ",
            "as it can't appear at the 'root' of the project. Therefore it doesn't ",
            "need all of the properties"
         ],
         "properties":{
            "created":{
               "$ref":"project-data-entity.properties.created"
            },
            "modified":{
               "$ref":"project-data-entity.properties.created"
            },
            "uid":{
               "$ref":"project-data-entity.properties.uid"
            },
            "name":{
               "$ref":"project-data-entity.properties.name"
            },
            "biography":{
               "$ref":"project-data-memo"
            },
            "role":{
               "type":"string"
            }
         }
      },
      {
         "id":"project-data-content",
         "title":"Content entity",
         "description":"A base schema from which content entities derive",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^content$"
            },
            "subtype":{
               "type":"string"
            },
            "description":{
               "$ref":"project-data-memo"
            },
            "credits":{
               "type":"array",
               "items":{
                  "$ref":"project-data-credit"
               }
            },
            "doNotPublish":{
               "type":"boolean"
            },
            "tags":{
               "$ref":"project-data-tags"
            }
         }
      },
      {
         "id":"project-data-scene",
         "title":"Scene entity",
         "extends":{
            "$ref":"project-data-content"
         },
         "properties":{
            "subtype":{
               "pattern":"^scene$"
            },
            "begins":{
               "type":"string",
               "description":"Specifies the date and time on which the scene begins. No restriction to date format for use with fictional calendars."
            },
            "ends":{
               "type":"string",
               "description":"Specifies the date and time on which the scene ends. No restriction to date format for use with fictional calendars."
            },
            "viewpoint":{
               "$ref":"project-data-uid-ref"
            },
            "setting":{
               "$ref":"project-data-uid-ref"
            },
            "people":{
               "type":"array",
               "items":{
                  "$ref":"project-data-uid-ref"
               }
            },
            "places":{
               "type":"array",
               "items":{
                  "$ref":"project-data-uid-ref"
               }
            },
            "things":{
               "type":"array",
               "items":{
                  "$ref":"project-data-uid-ref"
               }
            },
            "notes":{
               "$ref":"project-data-file-ref"
            },
            "lastWordCount":{
               "type":"integer"
            },
            "tags":{
               "$ref":"project-data-tags"
            },
            "status":{
               "type":"string"
            },
            "structure":{
               "type":"string"
            },
            "importance":{
               "type":"string"
            },
            "ratings":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "maximum":10,
                  "minimum":0
               }
            },
            "goal":{
               "$ref":"project-data-memo"
            },
            "conflict":{
               "$ref":"project-data-memo"
            },
            "disaster":{
               "$ref":"project-data-memo"
            },
            "reaction":{
               "$ref":"project-data-memo"
            },
            "dilemma":{
               "$ref":"project-data-memo"
            },
            "decision":{
               "$ref":"project-data-memo"
            },
            "text":{
               "$ref":"project-data-file-ref"
            }
         }
      },
      {
         "id":"project-data-chapter",
         "title":"Chapter entity",
         "extends":{
            "$ref":"project-data-content"
         },
         "properties":{
            "subtype":{
               "pattern":"^chapter$"
            },
            "content":{
               "type":"array",
               "items":{
                  "type":[
                     {
                        "$ref":"project-data-scene"
                     }
                  ]
               },
               "additionalItems":false
            }
         }
      },
      {
         "id":"project-data-part",
         "title":"Part entity",
         "extends":{
            "$ref":"project-data-content"
         },
         "properties":{
            "subtype":{
               "pattern":"^part$"
            },
            "content":{
               "type":"array",
               "items":{
                  "type":[
                     {
                        "$ref":"project-data-chapter"
                     },
                     {
                        "$ref":"project-data-scene"
                     }
                  ]
               },
               "additionalItems":false
            }
         }
      },
      {
         "id":"project-data-book",
         "title":"Book entity",
         "extends":{
            "$ref":"project-data-content"
         },
         "properties":{
            "subtype":{
               "pattern":"^book$"
            },
            "content":{
               "type":"array",
               "items":{
                  "type":[
                     {
                        "$ref":"project-data-part"
                     },
                     {
                        "$ref":"project-data-chapter"
                     },
                     {
                        "$ref":"project-data-scene"
                     }
                  ]
               },
               "additionalItems":false
            }
         }
      },
      {
         "id":"project-data-journal-entry",
         "title":"Journal entry entity",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^journal$"
            },
            "posted":{
               "type":{
                  "$ref":"project-data-timestamp"
               }
            },
            "text":{
               "$ref":"project-data-file-ref"
            },
            "tags":{
               "$ref":"project-data-tags"
            }
         }
      },
      {
         "id":"project-data-note",
         "title":"Note entity",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^note$"
            },
            "text":{
               "$ref":"project-data-file-ref"
            },
            "subnotes":{
               "__comments":"Yet another issue with older versions saving single items as arrays",
               "type":[
                  {
                     "type":"array",
                     "items":{
                        "$ref":"project-data-note"
                     }
                  },
                  {
                     "$ref":"project-data-note"
                  }
               ]
            },
            "tags":{
               "$ref":"project-data-tags"
            }
         }
      },
      {
         "id":"project-data-person",
         "title":"Person entity",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^person$"
            },
            "fullName":{
               "type":"string"
            },
            "aliases":{
               "type":"string"
            },
            "isMajor":{
               "type":"boolean"
            },
            "description":{
               "$ref":"project-data-memo"
            },
            "biography":{
               "$ref":"project-data-file-ref"
            },
            "notes":{
               "$ref":"project-data-file-ref"
            },
            "role":{
               "type":"string"
            },
            "importance":{
               "type":"string"
            },
            "ratings":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "maximum":10,
                  "minimum":0
               }
            },
            "motivation":{
               "$ref":"project-data-memo"
            },
            "goal":{
               "$ref":"project-data-memo"
            },
            "conflict":{
               "$ref":"project-data-memo"
            },
            "epiphany":{
               "$ref":"project-data-memo"
            },
            "tags":{
               "$ref":"project-data-tags"
            }
         }
      },
      {
         "id":"project-data-place",
         "title":"Place entity",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^place$"
            },
            "description":{
               "$ref":"project-data-memo"
            },
            "background":{
               "$ref":"project-data-file-ref"
            },
            "notes":{
               "$ref":"project-data-file-ref"
            },
            "tags":{
               "$ref":"project-data-tags"
            }
         }
      },
      {
         "id":"project-data-thing",
         "title":"Thing entity",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^thing$"
            },
            "description":{
               "$ref":"project-data-memo"
            },
            "background":{
               "$ref":"project-data-file-ref"
            },
            "notes":{
               "$ref":"project-data-file-ref"
            },
            "tags":{
               "$ref":"project-data-tags"
            }
         }
      },
      {
         "id":"project-data-goal",
         "title":"Goal entity",
         "extends":{
            "$ref":"project-data-entity"
         },
         "properties":{
            "type":{
               "pattern":"^goal$"
            },
            "what":{
               "type":{
                  "$ref":"project-data-uid-ref"
               }
            },
            "comments":{
               "$ref":"project-data-memo"
            },
            "starting":{
               "type":{
                  "$ref":"project-data-timestamp"
               }
            },
            "ending":{
               "type":{
                  "$ref":"project-data-timestamp"
               }
            },
            "startingWordCount":{
               "type":"integer"
            },
            "targetWordCount":{
               "type":"integer"
            },
            "history":{
               "__comment":"This is necessary for similar formatting bugs as starting and ending",
               "type":[
                  {
                     "type":"array",
                     "items":{
                        "id":"project-data-goal-history",
                        "type":"object",
                        "properties":{
                           "uid":{
                              "$ref":"project-data-uid"
                           },
                           "when":{
                              "type":{
                                 "$ref":"project-data-timestamp"
                              }
                           },
                           "wordCount":{
                              "type":"integer"
                           }
                        }
                     },
                     "additionalItems":false
                  },
                  {
                     "$ref":"project-data-goal-history"
                  }
               ]
            }
         }
      }
   ],
   "title":"Story Steward Project File Format 1.0",
   "description":"Specification for the 1.0 version of the format of the primary Story Steward Project JSON File",
   "type":"object",
   "extends":{
      "$ref":"project-data-entity"
   },
   "properties":{
      "type":{
         "pattern":"^project$"
      },
      "uid":{
         "description":"This uid is pre-specified, as there should only ever be one project entity per project, and knowing this id ahead of time makes it possible to find it in the database quickly.",
         "pattern":"^project$"
      },
      "format":{
         "type":"string",
         "pattern":"^story-steward-1\\.0$",
         "required":true
      },
      "description":{
         "$ref":"project-data-memo"
      },
      "credits":{
         "type":"array",
         "items":{
            "$ref":"project-data-credit"
         },
         "additionalItems":false,
         "required":false
      },
      "content":{
         "type":"array",
         "items":{
            "type":[
               {
                  "$ref":"project-data-book"
               },
               {
                  "$ref":"project-data-part"
               },
               {
                  "$ref":"project-data-chapter"
               },
               {
                  "$ref":"project-data-scene"
               }
            ]
         },
         "additionalItems":false,
         "required":false
      },
      "notes":{
         "type":"array",
         "items":{
            "$ref":"project-data-note"
         },
         "additionalItems":false,
         "required":false
      },
      "journal":{
         "type":"array",
         "items":{
            "$ref":"project-data-journal-entry"
         },
         "additionalItems":false,
         "required":false
      },
      "persons":{
         "type":"array",
         "items":{
            "$ref":"project-data-person"
         },
         "additionalItems":false,
         "required":false
      },
      "places":{
         "type":"array",
         "items":{
            "$ref":"project-data-place"
         },
         "additionalItems":false,
         "required":false
      },
      "things":{
         "type":"array",
         "items":{
            "$ref":"project-data-thing"
         },
         "additionalItems":false,
         "required":false
      },
      "goals":{
         "type":"array",
         "items":{
            "$ref":"project-data-goal"
         },
         "additionalItems":false,
         "required":false
      },
      "customizations":{
         "type":"object",
         "properties":{
            "scene":{
               "type":"object",
               "properties":{
                  "statuses":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     },
                     "required":false
                  },
                  "structures":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     },
                     "required":false
                  },
                  "importances":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     },
                     "required":false
                  },
                  "ratings":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     },
                     "required":false
                  }
               },
               "required":false
            },
            "person":{
               "type":"object",
               "properties":{
                  "roles":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     },
                     "required":false
                  },
                  "importances":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     },
                     "required":false
                  },
                  "ratings":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     },
                     "required":false
                  }
               },
               "required":false
            }
         },
         "required":false
      },
      "interface":{
         "type":"object",
         "required":false
      }
   }
}